<?php

/**
 * @file
 * Contains quanthub_sdmx_sync.module.
 */

use Drupal\Core\Entity\EntityInterface;

/**
 * Cron callback for running service sdxm sync gauges.
 */
function quanthub_sdmx_sync_gauges_cron() {
  \Drupal::service('sdmx_sync_gauges')->syncGauages();
}

/**
 * Cron callback for running service sdxm sync datasets.
 */
function quanthub_sdmx_sync_datasets_cron() {
  \Drupal::service('sdmx_sync_datasets')->syncDatasetsUpdateDate();
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function quanthub_sdmx_sync_node_presave(EntityInterface $entity) {
  // Update gauge value on save if value is empty. Gauge just created.
  if ($entity->bundle() == 'gauge' && $entity->field_gauge_value->isEmpty()) {
    $filter = $entity->field_gauge_filter->getString();
    $urn = $entity->field_dataset->entity->field_quanthub_urn->getString();
    $gauge_updates = \Drupal::service('sdmx_sync_gauges')->getGaugeLastValueAndObservation(
      $urn,
      $filter
    );
    if ($gauge_updates) {
      $entity->set('field_gauge_value', $gauge_updates['last_serie_value']);
      $entity->set('field_gauge_period', $gauge_updates['last_structure_observation']);
    }
  }
}
